// Generated from ./Smack.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('../../index');


var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\2$\u00fe\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t",
    "\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20",
    "\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4",
    "\27\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35",
    "\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'",
    "\t\'\4(\t(\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3",
    "\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3",
    "\r\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22",
    "\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3",
    "\26\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33",
    "\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3",
    "\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \7 \u00af\n \f \16 \u00b2\13 \3",
    "!\3!\3!\7!\u00b7\n!\f!\16!\u00ba\13!\3!\3!\3\"\3\"\3\"\5\"\u00c1\n\"",
    "\3#\3#\3#\3#\3#\3#\3$\3$\3%\5%\u00cc\n%\3%\3%\3%\6%\u00d1\n%\r%\16%",
    "\u00d2\3%\5%\u00d6\n%\3%\5%\u00d9\n%\3%\3%\3%\3%\5%\u00df\n%\3%\5%\u00e2",
    "\n%\3&\3&\3&\7&\u00e7\n&\f&\16&\u00ea\13&\5&\u00ec\n&\3\'\3\'\5\'\u00f0",
    "\n\'\3\'\3\'\3(\6(\u00f5\n(\r(\16(\u00f6\3(\7(\u00fa\n(\f(\16(\u00fd",
    "\13(\2\2)\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33",
    "\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67",
    "\359\36;\37= ?!A\"C\2E\2G\2I#K\2M\2O$\3\2\13\4\2$$^^\n\2$$\61\61^^d",
    "dhhppttvv\5\2\62;CHch\3\2\62;\3\2\63;\4\2GGgg\4\2--//\6\2&&C\\aac|\7",
    "\2&&\62;C\\aac|\u0108\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2",
    "\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2",
    "\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37",
    "\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+",
    "\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2",
    "\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2",
    "\2\2I\3\2\2\2\2O\3\2\2\2\3Q\3\2\2\2\5V\3\2\2\2\7X\3\2\2\2\tZ\3\2\2\2",
    "\13\\\3\2\2\2\r^\3\2\2\2\17`\3\2\2\2\21c\3\2\2\2\23f\3\2\2\2\25h\3\2",
    "\2\2\27k\3\2\2\2\31m\3\2\2\2\33p\3\2\2\2\35r\3\2\2\2\37w\3\2\2\2!y\3",
    "\2\2\2#{\3\2\2\2%}\3\2\2\2\'\u0081\3\2\2\2)\u0084\3\2\2\2+\u0089\3\2",
    "\2\2-\u008f\3\2\2\2/\u0091\3\2\2\2\61\u0093\3\2\2\2\63\u0095\3\2\2\2",
    "\65\u0097\3\2\2\2\67\u0099\3\2\2\29\u009b\3\2\2\2;\u00a0\3\2\2\2=\u00a6",
    "\3\2\2\2?\u00ab\3\2\2\2A\u00b3\3\2\2\2C\u00bd\3\2\2\2E\u00c2\3\2\2\2",
    "G\u00c8\3\2\2\2I\u00e1\3\2\2\2K\u00eb\3\2\2\2M\u00ed\3\2\2\2O\u00f4",
    "\3\2\2\2QR\7r\2\2RS\7c\2\2ST\7e\2\2TU\7m\2\2U\4\3\2\2\2VW\7-\2\2W\6",
    "\3\2\2\2XY\7/\2\2Y\b\3\2\2\2Z[\7,\2\2[\n\3\2\2\2\\]\7\61\2\2]\f\3\2",
    "\2\2^_\7\'\2\2_\16\3\2\2\2`a\7?\2\2ab\7?\2\2b\20\3\2\2\2cd\7#\2\2de",
    "\7?\2\2e\22\3\2\2\2fg\7>\2\2g\24\3\2\2\2hi\7>\2\2ij\7?\2\2j\26\3\2\2",
    "\2kl\7@\2\2l\30\3\2\2\2mn\7@\2\2no\7?\2\2o\32\3\2\2\2pq\7?\2\2q\34\3",
    "\2\2\2rs\7h\2\2st\7w\2\2tu\7p\2\2uv\7e\2\2v\36\3\2\2\2wx\7*\2\2x \3",
    "\2\2\2yz\7.\2\2z\"\3\2\2\2{|\7+\2\2|$\3\2\2\2}~\7t\2\2~\177\7g\2\2\177",
    "\u0080\7v\2\2\u0080&\3\2\2\2\u0081\u0082\7k\2\2\u0082\u0083\7h\2\2\u0083",
    "(\3\2\2\2\u0084\u0085\7g\2\2\u0085\u0086\7n\2\2\u0086\u0087\7u\2\2\u0087",
    "\u0088\7g\2\2\u0088*\3\2\2\2\u0089\u008a\7y\2\2\u008a\u008b\7j\2\2\u008b",
    "\u008c\7k\2\2\u008c\u008d\7n\2\2\u008d\u008e\7g\2\2\u008e,\3\2\2\2\u008f",
    "\u0090\7=\2\2\u0090.\3\2\2\2\u0091\u0092\7}\2\2\u0092\60\3\2\2\2\u0093",
    "\u0094\7\177\2\2\u0094\62\3\2\2\2\u0095\u0096\7<\2\2\u0096\64\3\2\2",
    "\2\u0097\u0098\7]\2\2\u0098\66\3\2\2\2\u0099\u009a\7_\2\2\u009a8\3\2",
    "\2\2\u009b\u009c\7v\2\2\u009c\u009d\7t\2\2\u009d\u009e\7w\2\2\u009e",
    "\u009f\7g\2\2\u009f:\3\2\2\2\u00a0\u00a1\7h\2\2\u00a1\u00a2\7c\2\2\u00a2",
    "\u00a3\7n\2\2\u00a3\u00a4\7u\2\2\u00a4\u00a5\7g\2\2\u00a5<\3\2\2\2\u00a6",
    "\u00a7\7p\2\2\u00a7\u00a8\7w\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7n\2",
    "\2\u00aa>\3\2\2\2\u00ab\u00b0\5O(\2\u00ac\u00ad\7\60\2\2\u00ad\u00af",
    "\5O(\2\u00ae\u00ac\3\2\2\2\u00af\u00b2\3\2\2\2\u00b0\u00ae\3\2\2\2\u00b0",
    "\u00b1\3\2\2\2\u00b1@\3\2\2\2\u00b2\u00b0\3\2\2\2\u00b3\u00b8\7$\2\2",
    "\u00b4\u00b7\5C\"\2\u00b5\u00b7\n\2\2\2\u00b6\u00b4\3\2\2\2\u00b6\u00b5",
    "\3\2\2\2\u00b7\u00ba\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2\2\2",
    "\u00b9\u00bb\3\2\2\2\u00ba\u00b8\3\2\2\2\u00bb\u00bc\7$\2\2\u00bcB\3",
    "\2\2\2\u00bd\u00c0\7^\2\2\u00be\u00c1\t\3\2\2\u00bf\u00c1\5E#\2\u00c0",
    "\u00be\3\2\2\2\u00c0\u00bf\3\2\2\2\u00c1D\3\2\2\2\u00c2\u00c3\7w\2\2",
    "\u00c3\u00c4\5G$\2\u00c4\u00c5\5G$\2\u00c5\u00c6\5G$\2\u00c6\u00c7\5",
    "G$\2\u00c7F\3\2\2\2\u00c8\u00c9\t\4\2\2\u00c9H\3\2\2\2\u00ca\u00cc\7",
    "/\2\2\u00cb\u00ca\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd",
    "\u00ce\5K&\2\u00ce\u00d0\7\60\2\2\u00cf\u00d1\t\5\2\2\u00d0\u00cf\3",
    "\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3",
    "\u00d5\3\2\2\2\u00d4\u00d6\5M\'\2\u00d5\u00d4\3\2\2\2\u00d5\u00d6\3",
    "\2\2\2\u00d6\u00e2\3\2\2\2\u00d7\u00d9\7/\2\2\u00d8\u00d7\3\2\2\2\u00d8",
    "\u00d9\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00db\5K&\2\u00db\u00dc\5M",
    "\'\2\u00dc\u00e2\3\2\2\2\u00dd\u00df\7/\2\2\u00de\u00dd\3\2\2\2\u00de",
    "\u00df\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0\u00e2\5K&\2\u00e1\u00cb\3\2",
    "\2\2\u00e1\u00d8\3\2\2\2\u00e1\u00de\3\2\2\2\u00e2J\3\2\2\2\u00e3\u00ec",
    "\7\62\2\2\u00e4\u00e8\t\6\2\2\u00e5\u00e7\t\5\2\2\u00e6\u00e5\3\2\2",
    "\2\u00e7\u00ea\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e9",
    "\u00ec\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00e3\3\2\2\2\u00eb\u00e4\3",
    "\2\2\2\u00ecL\3\2\2\2\u00ed\u00ef\t\7\2\2\u00ee\u00f0\t\b\2\2\u00ef",
    "\u00ee\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\5",
    "K&\2\u00f2N\3\2\2\2\u00f3\u00f5\t\t\2\2\u00f4\u00f3\3\2\2\2\u00f5\u00f6",
    "\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00fb\3\2\2\2",
    "\u00f8\u00fa\t\n\2\2\u00f9\u00f8\3\2\2\2\u00fa\u00fd\3\2\2\2\u00fb\u00f9",
    "\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fcP\3\2\2\2\u00fd\u00fb\3\2\2\2\22\2",
    "\u00b0\u00b6\u00b8\u00c0\u00cb\u00d2\u00d5\u00d8\u00de\u00e1\u00e8\u00eb",
    "\u00ef\u00f6\u00fb\2"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function SmackLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

SmackLexer.prototype = Object.create(antlr4.Lexer.prototype);
SmackLexer.prototype.constructor = SmackLexer;

SmackLexer.EOF = antlr4.Token.EOF;
SmackLexer.T__0 = 1;
SmackLexer.T__1 = 2;
SmackLexer.T__2 = 3;
SmackLexer.T__3 = 4;
SmackLexer.T__4 = 5;
SmackLexer.T__5 = 6;
SmackLexer.T__6 = 7;
SmackLexer.T__7 = 8;
SmackLexer.T__8 = 9;
SmackLexer.T__9 = 10;
SmackLexer.T__10 = 11;
SmackLexer.T__11 = 12;
SmackLexer.T__12 = 13;
SmackLexer.T__13 = 14;
SmackLexer.T__14 = 15;
SmackLexer.T__15 = 16;
SmackLexer.T__16 = 17;
SmackLexer.T__17 = 18;
SmackLexer.T__18 = 19;
SmackLexer.T__19 = 20;
SmackLexer.T__20 = 21;
SmackLexer.T__21 = 22;
SmackLexer.T__22 = 23;
SmackLexer.T__23 = 24;
SmackLexer.T__24 = 25;
SmackLexer.T__25 = 26;
SmackLexer.T__26 = 27;
SmackLexer.T__27 = 28;
SmackLexer.T__28 = 29;
SmackLexer.T__29 = 30;
SmackLexer.DottedId = 31;
SmackLexer.STRING = 32;
SmackLexer.NUMBER = 33;
SmackLexer.Id = 34;


SmackLexer.modeNames = [ "DEFAULT_MODE" ];

SmackLexer.literalNames = [ 'null', "'pack'", "'+'", "'-'", "'*'", "'/'", 
                            "'%'", "'=='", "'!='", "'<'", "'<='", "'>'", 
                            "'>='", "'='", "'func'", "'('", "','", "')'", 
                            "'ret'", "'if'", "'else'", "'while'", "';'", 
                            "'{'", "'}'", "':'", "'['", "']'", "'true'", 
                            "'false'", "'null'" ];

SmackLexer.symbolicNames = [ 'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', "DottedId", "STRING", "NUMBER", "Id" ];

SmackLexer.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", 
                         "T__6", "T__7", "T__8", "T__9", "T__10", "T__11", 
                         "T__12", "T__13", "T__14", "T__15", "T__16", "T__17", 
                         "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", 
                         "T__24", "T__25", "T__26", "T__27", "T__28", "T__29", 
                         "DottedId", "STRING", "ESC", "UNICODE", "HEX", 
                         "NUMBER", "INT", "EXP", "Id" ];

SmackLexer.grammarFileName = "Smack.g4";



exports.SmackLexer = SmackLexer;

