// Generated from ./Smack.g4 by ANTLR 4.5
// jshint ignore: start
var antlr4 = require('../../index');


var serializedATN = ["\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\2&\u0105\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t",
    "\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20",
    "\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4",
    "\27\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35",
    "\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'",
    "\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3",
    "\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r",
    "\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3",
    "\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30",
    "\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3",
    "\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3\37",
    "\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\6\"\u00b5\n\"\r\"\16\"\u00b6",
    "\3\"\7\"\u00ba\n\"\f\"\16\"\u00bd\13\"\3#\6#\u00c0\n#\r#\16#\u00c1\3",
    "#\3#\3$\3$\3$\7$\u00c9\n$\f$\16$\u00cc\13$\3$\3$\3%\3%\3%\5%\u00d3\n",
    "%\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\5(\u00de\n(\3(\3(\3(\6(\u00e3\n(\r(\16",
    "(\u00e4\3(\5(\u00e8\n(\3(\5(\u00eb\n(\3(\3(\3(\3(\5(\u00f1\n(\3(\5(",
    "\u00f4\n(\3)\3)\3)\7)\u00f9\n)\f)\16)\u00fc\13)\5)\u00fe\n)\3*\3*\5",
    "*\u0102\n*\3*\3*\2\2+\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f",
    "\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32",
    "\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I\2K\2M\2O&Q\2S\2\3\2\f\6\2&",
    "&C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2$$^^\n\2$$\61\61^^ddh",
    "hppttvv\5\2\62;CHch\3\2\62;\3\2\63;\4\2GGgg\4\2--//\u010f\2\3\3\2\2",
    "\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17",
    "\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3",
    "\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2",
    "\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2",
    "\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3",
    "\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2",
    "\2\2\2O\3\2\2\2\3U\3\2\2\2\5W\3\2\2\2\7Y\3\2\2\2\t[\3\2\2\2\13`\3\2",
    "\2\2\rb\3\2\2\2\17d\3\2\2\2\21f\3\2\2\2\23h\3\2\2\2\25j\3\2\2\2\27l",
    "\3\2\2\2\31n\3\2\2\2\33q\3\2\2\2\35t\3\2\2\2\37v\3\2\2\2!y\3\2\2\2#",
    "{\3\2\2\2%~\3\2\2\2\'\u0080\3\2\2\2)\u0085\3\2\2\2+\u0087\3\2\2\2-\u0089",
    "\3\2\2\2/\u008b\3\2\2\2\61\u008f\3\2\2\2\63\u0092\3\2\2\2\65\u0097\3",
    "\2\2\2\67\u009d\3\2\2\29\u009f\3\2\2\2;\u00a1\3\2\2\2=\u00a3\3\2\2\2",
    "?\u00a8\3\2\2\2A\u00ae\3\2\2\2C\u00b4\3\2\2\2E\u00bf\3\2\2\2G\u00c5",
    "\3\2\2\2I\u00cf\3\2\2\2K\u00d4\3\2\2\2M\u00da\3\2\2\2O\u00f3\3\2\2\2",
    "Q\u00fd\3\2\2\2S\u00ff\3\2\2\2UV\7]\2\2V\4\3\2\2\2WX\7_\2\2X\6\3\2\2",
    "\2YZ\7\60\2\2Z\b\3\2\2\2[\\\7r\2\2\\]\7c\2\2]^\7e\2\2^_\7m\2\2_\n\3",
    "\2\2\2`a\7=\2\2a\f\3\2\2\2bc\7-\2\2c\16\3\2\2\2de\7/\2\2e\20\3\2\2\2",
    "fg\7,\2\2g\22\3\2\2\2hi\7\61\2\2i\24\3\2\2\2jk\7\'\2\2k\26\3\2\2\2l",
    "m\7`\2\2m\30\3\2\2\2no\7?\2\2op\7?\2\2p\32\3\2\2\2qr\7#\2\2rs\7?\2\2",
    "s\34\3\2\2\2tu\7>\2\2u\36\3\2\2\2vw\7>\2\2wx\7?\2\2x \3\2\2\2yz\7@\2",
    "\2z\"\3\2\2\2{|\7@\2\2|}\7?\2\2}$\3\2\2\2~\177\7?\2\2\177&\3\2\2\2\u0080",
    "\u0081\7h\2\2\u0081\u0082\7w\2\2\u0082\u0083\7p\2\2\u0083\u0084\7e\2",
    "\2\u0084(\3\2\2\2\u0085\u0086\7*\2\2\u0086*\3\2\2\2\u0087\u0088\7.\2",
    "\2\u0088,\3\2\2\2\u0089\u008a\7+\2\2\u008a.\3\2\2\2\u008b\u008c\7t\2",
    "\2\u008c\u008d\7g\2\2\u008d\u008e\7v\2\2\u008e\60\3\2\2\2\u008f\u0090",
    "\7k\2\2\u0090\u0091\7h\2\2\u0091\62\3\2\2\2\u0092\u0093\7g\2\2\u0093",
    "\u0094\7n\2\2\u0094\u0095\7u\2\2\u0095\u0096\7g\2\2\u0096\64\3\2\2\2",
    "\u0097\u0098\7y\2\2\u0098\u0099\7j\2\2\u0099\u009a\7k\2\2\u009a\u009b",
    "\7n\2\2\u009b\u009c\7g\2\2\u009c\66\3\2\2\2\u009d\u009e\7}\2\2\u009e",
    "8\3\2\2\2\u009f\u00a0\7\177\2\2\u00a0:\3\2\2\2\u00a1\u00a2\7<\2\2\u00a2",
    "<\3\2\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7w\2\2\u00a6",
    "\u00a7\7g\2\2\u00a7>\3\2\2\2\u00a8\u00a9\7h\2\2\u00a9\u00aa\7c\2\2\u00aa",
    "\u00ab\7n\2\2\u00ab\u00ac\7u\2\2\u00ac\u00ad\7g\2\2\u00ad@\3\2\2\2\u00ae",
    "\u00af\7p\2\2\u00af\u00b0\7w\2\2\u00b0\u00b1\7n\2\2\u00b1\u00b2\7n\2",
    "\2\u00b2B\3\2\2\2\u00b3\u00b5\t\2\2\2\u00b4\u00b3\3\2\2\2\u00b5\u00b6",
    "\3\2\2\2\u00b6\u00b4\3\2\2\2\u00b6\u00b7\3\2\2\2\u00b7\u00bb\3\2\2\2",
    "\u00b8\u00ba\t\3\2\2\u00b9\u00b8\3\2\2\2\u00ba\u00bd\3\2\2\2\u00bb\u00b9",
    "\3\2\2\2\u00bb\u00bc\3\2\2\2\u00bcD\3\2\2\2\u00bd\u00bb\3\2\2\2\u00be",
    "\u00c0\t\4\2\2\u00bf\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00bf\3",
    "\2\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3\u00c4\b#\2\2\u00c4",
    "F\3\2\2\2\u00c5\u00ca\7$\2\2\u00c6\u00c9\5I%\2\u00c7\u00c9\n\5\2\2\u00c8",
    "\u00c6\3\2\2\2\u00c8\u00c7\3\2\2\2\u00c9\u00cc\3\2\2\2\u00ca\u00c8\3",
    "\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00cd\3\2\2\2\u00cc\u00ca\3\2\2\2\u00cd",
    "\u00ce\7$\2\2\u00ceH\3\2\2\2\u00cf\u00d2\7^\2\2\u00d0\u00d3\t\6\2\2",
    "\u00d1\u00d3\5K&\2\u00d2\u00d0\3\2\2\2\u00d2\u00d1\3\2\2\2\u00d3J\3",
    "\2\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\5M\'\2\u00d6\u00d7\5M\'\2\u00d7",
    "\u00d8\5M\'\2\u00d8\u00d9\5M\'\2\u00d9L\3\2\2\2\u00da\u00db\t\7\2\2",
    "\u00dbN\3\2\2\2\u00dc\u00de\7/\2\2\u00dd\u00dc\3\2\2\2\u00dd\u00de\3",
    "\2\2\2\u00de\u00df\3\2\2\2\u00df\u00e0\5Q)\2\u00e0\u00e2\7\60\2\2\u00e1",
    "\u00e3\t\b\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4\u00e2\3",
    "\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e7\3\2\2\2\u00e6\u00e8\5S*\2\u00e7",
    "\u00e6\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00f4\3\2\2\2\u00e9\u00eb\7",
    "/\2\2\u00ea\u00e9\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec",
    "\u00ed\5Q)\2\u00ed\u00ee\5S*\2\u00ee\u00f4\3\2\2\2\u00ef\u00f1\7/\2",
    "\2\u00f0\u00ef\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2",
    "\u00f4\5Q)\2\u00f3\u00dd\3\2\2\2\u00f3\u00ea\3\2\2\2\u00f3\u00f0\3\2",
    "\2\2\u00f4P\3\2\2\2\u00f5\u00fe\7\62\2\2\u00f6\u00fa\t\t\2\2\u00f7\u00f9",
    "\t\b\2\2\u00f8\u00f7\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2",
    "\u00fa\u00fb\3\2\2\2\u00fb\u00fe\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00f5",
    "\3\2\2\2\u00fd\u00f6\3\2\2\2\u00feR\3\2\2\2\u00ff\u0101\t\n\2\2\u0100",
    "\u0102\t\13\2\2\u0101\u0100\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0103",
    "\3\2\2\2\u0103\u0104\5Q)\2\u0104T\3\2\2\2\22\2\u00b6\u00bb\u00c1\u00c8",
    "\u00ca\u00d2\u00dd\u00e4\u00e7\u00ea\u00f0\u00f3\u00fa\u00fd\u0101\3",
    "\b\2\2"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function SmackLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

SmackLexer.prototype = Object.create(antlr4.Lexer.prototype);
SmackLexer.prototype.constructor = SmackLexer;

SmackLexer.EOF = antlr4.Token.EOF;
SmackLexer.T__0 = 1;
SmackLexer.T__1 = 2;
SmackLexer.T__2 = 3;
SmackLexer.T__3 = 4;
SmackLexer.T__4 = 5;
SmackLexer.T__5 = 6;
SmackLexer.T__6 = 7;
SmackLexer.T__7 = 8;
SmackLexer.T__8 = 9;
SmackLexer.T__9 = 10;
SmackLexer.T__10 = 11;
SmackLexer.T__11 = 12;
SmackLexer.T__12 = 13;
SmackLexer.T__13 = 14;
SmackLexer.T__14 = 15;
SmackLexer.T__15 = 16;
SmackLexer.T__16 = 17;
SmackLexer.T__17 = 18;
SmackLexer.T__18 = 19;
SmackLexer.T__19 = 20;
SmackLexer.T__20 = 21;
SmackLexer.T__21 = 22;
SmackLexer.T__22 = 23;
SmackLexer.T__23 = 24;
SmackLexer.T__24 = 25;
SmackLexer.T__25 = 26;
SmackLexer.T__26 = 27;
SmackLexer.T__27 = 28;
SmackLexer.T__28 = 29;
SmackLexer.T__29 = 30;
SmackLexer.T__30 = 31;
SmackLexer.T__31 = 32;
SmackLexer.Id = 33;
SmackLexer.WS = 34;
SmackLexer.STRING = 35;
SmackLexer.NUMBER = 36;


SmackLexer.modeNames = [ "DEFAULT_MODE" ];

SmackLexer.literalNames = [ 'null', "'['", "']'", "'.'", "'pack'", "';'", 
                            "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'=='", 
                            "'!='", "'<'", "'<='", "'>'", "'>='", "'='", 
                            "'func'", "'('", "','", "')'", "'ret'", "'if'", 
                            "'else'", "'while'", "'{'", "'}'", "':'", "'true'", 
                            "'false'", "'null'" ];

SmackLexer.symbolicNames = [ 'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', 'null', 'null', 'null', 
                             'null', 'null', 'null', "Id", "WS", "STRING", 
                             "NUMBER" ];

SmackLexer.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", 
                         "T__6", "T__7", "T__8", "T__9", "T__10", "T__11", 
                         "T__12", "T__13", "T__14", "T__15", "T__16", "T__17", 
                         "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", 
                         "T__24", "T__25", "T__26", "T__27", "T__28", "T__29", 
                         "T__30", "T__31", "Id", "WS", "STRING", "ESC", 
                         "UNICODE", "HEX", "NUMBER", "INT", "EXP" ];

SmackLexer.grammarFileName = "Smack.g4";



exports.SmackLexer = SmackLexer;

